@page "/settings"
@using MudBlazor
@using WSService.Services
@using WRModel.Models

@rendermode InteractiveServer
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage
@inject NavigationManager Navigation
@inject IJSRuntime JS


<MudPaper Class="pa-4 mx-auto mt-6 gradient-card-jade" Style="max-width: 500px; border-radius: 12px;">
    <MudText Typo="Typo.h5" GutterBottom Style="text-align:center;">Settings</MudText>

    <MudText Typo="Typo.h6">About</MudText>
    <MudText Class="mb-4">WeatherApp is a modern weather application, providing real-time weather updates and forecasts.</MudText>
    <MudText Typo="Typo.h6">Help Center</MudText>
    <MudText Class="mb-4">For assistance, please visit our <MudLink Href="https://example.com/help" Target="_blank">Help Center</MudLink>.</MudText>
  
   <MudStack Direction="Row" Align="Align.Center" Style="width:100%;">
        <!-- Logout Button -->
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="LogoutUser" Style="flex:1;">
            Logout
        </MudButton>

        <!-- Theme Toggle Icon -->
        <MudIconButton Icon="@Icons.Material.Filled.WbSunny"
                    Color="Color.Default"
                    Size="Size.Large"
                    OnClick="@(() => JS.InvokeVoidAsync("toggleDarkMode"))"
                    Style="margin-left:10px;" />
    </MudStack>
</MudPaper>    
 
   

@code {
    
   
    private bool _renderComplete = false;
    private bool _hasInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Apply saved theme when visiting settings page
            await JS.InvokeVoidAsync("applySavedTheme");
        }
    }

    private async Task ToggleTheme()
    {
        await JS.InvokeVoidAsync("toggleDarkMode");
    }
    


    private async Task LogoutUser()
    {
        await SessionStorage.RemoveItemAsync("currentUser");
        Navigation.NavigateTo("/signin", true);
    }
}